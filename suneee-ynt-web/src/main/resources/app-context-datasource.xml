<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
     http://www.springframework.org/schema/beans   
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/tx   
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
     http://www.springframework.org/schema/aop   
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 定义数据连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${ora-driver}" />
		<property name="jdbcUrl" value="${ora-url}" />
		<property name="user" value="${ora-username}" />
		<property name="password" value="${ora-password}" />
		<property name="initialPoolSize" value="5" />
		<property name="maxStatements" value="0" />
		<property name="maxPoolSize" value="25" />
		<property name="maxIdleTime" value="60" />
		<property name="debugUnreturnedConnectionStackTraces" value="true" />
		<property name="preferredTestQuery" value="select 1 from dual" />
		<property name="idleConnectionTestPeriod" value="60" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- mapper和resultmap配置路径 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/suneee/ynt/*/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>


	<!--通过模板定制mybatis的行为 -->
	<bean id="sqlSessionTemplateSimple" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<!--更新采用单个模式 -->
		<constructor-arg index="1" value="SIMPLE" />
	</bean>

	<!--通过模板定制mybatis的行为 -->
	<bean id="sqlSessionTemplateBatch" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<!--更新采用批量模式 -->
		<constructor-arg index="1" value="BATCH" />
	</bean>

	<!-- 采用自动扫描方式创建mapper bean(单个更新模式) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com/suneee/ynt/*/mapper" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateSimple" />
		<property name="markerInterface" value="com.suneee.core.mapper.IDataSourceMapper" />
	</bean>

	<!-- 采用自动扫描方式创建mapper bean(批量更新模式) <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="cn.com.sunee.mapper" /> <property name="sqlSessionTemplateBeanName" 
		value="sqlSessionTemplateBatch" /> <property name="markerInterface" value="com.xxx.dao.BatchDao" 
		/> </bean> -->

	<!-- 采用自动扫描方式创建mapper bean(批量更新模式) <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.xxx.dao" /> <property name="sqlSessionTemplateBeanName" 
		value="sqlSessionTemplateBatch" /> <property name="annotationClass" value="com.xxx.dao.BatchAnnotation" 
		/> </bean> -->

	<!-- annotationClass：配置了该注解的dao才会被扫描器扫描，与basePackage是与的作用。 需要注意的是，两个过滤条件只能配一个。 -->

</beans>